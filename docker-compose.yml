version: "3.9"

services:
  zookeeper:
    container_name: zookeeper
    image: bitnami/zookeeper:3.9
    environment:
      - ZOOKEEPER_CLIENT_PORT=2181
      - ZOOKEEPER_TICK_TIME=2000
      - ALLOW_ANONYMOUS_LOGIN=yes
    volumes:
      - ./zookeeper_data:/bitnami/zookeeper
    networks:
      - kafka_network

  kafka:
    container_name: kafka
    image: bitnami/kafka:3.9
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_LISTENERS=PLAINTEXT://:9092
    volumes:
      - ./kafka_data:/bitnami/kafka
    depends_on:
      - zookeeper
    networks:
      - kafka_network
    ports:
      - "9092:9092"
    healthcheck:
      test: [ "CMD", "kafka-broker-api-versions", "--bootstrap-server", "kafka:9092" ]
      interval: 10s
      retries: 10
      start_period: 30s

  postgres:
    container_name: postgres
    image: postgres:15
    restart: always
    volumes:
      - .pgdata:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}" ]
      interval: 1s
      timeout: 5s
      retries: 10
    networks:
      - kafka_network

  adminer:
    container_name: adminer
    image: adminer:4.8.1
    restart: always
    ports:
      - "8002:8080"
    networks:
      - kafka_network

  web_app:
    container_name: web_app
    build: ./app
    ports:
      - "8001:8000"
    command: ./wait-for-it.sh kafka:9092 -- uvicorn web_app:web_app --host 0.0.0.0
    volumes:
      - ./app:/usr/src/app
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_HOST: ${POSTGRES_HOST}
    depends_on:
      - postgres
      - kafka
    networks:
      - kafka_network

networks:
  kafka_network:
    driver: bridge